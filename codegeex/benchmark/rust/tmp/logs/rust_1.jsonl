{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memchr@2.5.0","manifest_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.5.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.5.0/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/workspace/CodeGeeX/codegeex/benchmark/rust/target/debug/build/memchr-cb79429ef7525660/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#memchr@2.5.0","linked_libs":[],"linked_paths":[],"cfgs":["memchr_runtime_simd","memchr_runtime_sse2","memchr_runtime_sse42","memchr_runtime_avx"],"env":[],"out_dir":"/workspace/CodeGeeX/codegeex/benchmark/rust/target/debug/build/memchr-0655e93f9f0854d8/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.139","manifest_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.139/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.139/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/workspace/CodeGeeX/codegeex/benchmark/rust/target/debug/build/libc-df7e263b76b63be0/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.6.28","manifest_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-syntax-0.6.28/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex-syntax","src_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-syntax-0.6.28/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/workspace/CodeGeeX/codegeex/benchmark/rust/target/debug/deps/libregex_syntax-87b5fd2c0c3bd78b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#md5@0.7.0","manifest_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/md5-0.7.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"md5","src_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/md5-0.7.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/workspace/CodeGeeX/codegeex/benchmark/rust/target/debug/deps/libmd5-f4743d12352c0fc6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memchr@2.5.0","manifest_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.5.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/workspace/CodeGeeX/codegeex/benchmark/rust/target/debug/deps/libmemchr-4335691aa5ee1cde.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.139","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_priv_mod_use","libc_union","libc_const_size_of","libc_align","libc_int128","libc_core_cvoid","libc_packedN","libc_cfg_target_vendor","libc_non_exhaustive","libc_ptr_addr_of","libc_underscore_const_names","libc_const_extern_fn"],"env":[],"out_dir":"/workspace/CodeGeeX/codegeex/benchmark/rust/target/debug/build/libc-d1e8eba0f5b5e6ec/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#aho-corasick@0.7.20","manifest_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aho-corasick-0.7.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aho_corasick","src_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/aho-corasick-0.7.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/workspace/CodeGeeX/codegeex/benchmark/rust/target/debug/deps/libaho_corasick-80553f3f92c84c60.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.139","manifest_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.139/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.139/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/workspace/CodeGeeX/codegeex/benchmark/rust/target/debug/deps/liblibc-42137c015bf90361.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#regex@1.7.1","manifest_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-1.7.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex","src_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-1.7.1/src/lib.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["aho-corasick","default","memchr","perf","perf-cache","perf-dfa","perf-inline","perf-literal","std","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/workspace/CodeGeeX/codegeex/benchmark/rust/target/debug/deps/libregex-d47ac63891b392cd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rand@0.4.6","manifest_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.4.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rand","src_path":"/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.4.6/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","libc","std"],"filenames":["/workspace/CodeGeeX/codegeex/benchmark/rust/target/debug/deps/librand-815e695e3ad827cf.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"path+file:///workspace/CodeGeeX/codegeex/benchmark/rust#0.1.0","manifest_path":"/workspace/CodeGeeX/codegeex/benchmark/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_1","src_path":"/workspace/CodeGeeX/codegeex/benchmark/rust/src/bin/rust_1.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: this file contains an unclosed delimiter\n  --> src/bin/rust_1.rs:48:3\n   |\n2  | fn main(){ \n   |          - this delimiter might not be properly closed...\n3  |  } \n   |  - ...as it matches this but it has different indentation\n...\n11 | fn separate_paren_groups(paren_string: String) -> Vec<String>{\n   |                                                              - unclosed delimiter\n...\n48 | }\n   |   ^\n\n","$message_type":"diagnostic","children":[],"code":null,"level":"error","message":"this file contains an unclosed delimiter","spans":[{"byte_end":270,"byte_start":269,"column_end":63,"column_start":62,"expansion":null,"file_name":"src/bin/rust_1.rs","is_primary":false,"label":"unclosed delimiter","line_end":11,"line_start":11,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":63,"highlight_start":62,"text":"fn separate_paren_groups(paren_string: String) -> Vec<String>{"}]},{"byte_end":10,"byte_start":10,"column_end":10,"column_start":10,"expansion":null,"file_name":"src/bin/rust_1.rs","is_primary":false,"label":"this delimiter might not be properly closed...","line_end":2,"line_start":2,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":10,"text":"fn main(){ "}]},{"byte_end":14,"byte_start":14,"column_end":2,"column_start":2,"expansion":null,"file_name":"src/bin/rust_1.rs","is_primary":false,"label":"...as it matches this but it has different indentation","line_end":3,"line_start":3,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":2,"highlight_start":2,"text":" } "}]},{"byte_end":1382,"byte_start":1382,"column_end":3,"column_start":3,"expansion":null,"file_name":"src/bin/rust_1.rs","is_primary":true,"label":null,"line_end":48,"line_start":48,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":3,"highlight_start":3,"text":"}"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///workspace/CodeGeeX/codegeex/benchmark/rust#0.1.0","manifest_path":"/workspace/CodeGeeX/codegeex/benchmark/rust/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rust_1","src_path":"/workspace/CodeGeeX/codegeex/benchmark/rust/src/bin/rust_1.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: aborting due to 1 previous error\n\n","$message_type":"diagnostic","children":[],"code":null,"level":"error","message":"aborting due to 1 previous error","spans":[]}}
{"reason":"build-finished","success":false}
